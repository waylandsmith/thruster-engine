// Generated by CoffeeScript 1.3.3
(function() {
  var Animation, GameObject, LoopAnimation, PingPongAnimation, obj, testobj,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  obj = [];

  GameObject = (function() {

    GameObject.x = 0;

    GameObject.y = 0;

    GameObject.img = 0;

    GameObject.isVisible = true;

    GameObject.isCollidable = true;

    function GameObject(xCord, yCrod, image) {
      this.xCord = xCord;
      this.yCrod = yCrod;
      this.image = image;
      this.x = this.xCord;
      this.y = this.yCord;
      this.imgs = this.images;
      obj.push(this);
    }

    return GameObject;

  })();

  Animation = (function() {

    Animation.sprites = 0;

    Animation.length = 0;

    Animation.currentFrame = 0;

    function Animation(imgs) {
      this.imgs = imgs;
      this.sprites = this.imgs;
      this.length = this.sprites.length;
    }

    Animation.prototype.rewind = function() {
      return this.currentFrame = 0;
    };

    Animation.prototype.getCurrentSprite = function() {
      return sprites[currentFrame];
    };

    return Animation;

  })();

  LoopAnimation = (function(_super) {

    __extends(LoopAnimation, _super);

    LoopAnimation.dir = 0;

    function LoopAnimation(imgs) {
      this.imgs = imgs;
      LoopAnimation.__super__.constructor.call(this, this.imgs);
    }

    LoopAnimation.prototype.step = function() {
      if (this.dir === 1) {
        if (this.currentFrame < this.length) {
          this.currentFrame = this.currentFrame + 1;
        } else {
          this.currentFrame = 0;
        }
      }
      if (this.dir === -1) {
        if (this.currentFrame > 0) {
          return this.currenFrame = this.currentFrame - 1;
        } else {
          return this.currentFrame = this.length - 1;
        }
      }
    };

    LoopAnimation.prototype.changeDir = function(i) {
      this.i = i;
      return this.dir = this.i;
    };

    return LoopAnimation;

  })(Animation);

  PingPongAnimation = (function(_super) {

    __extends(PingPongAnimation, _super);

    PingPongAnimation.dir = 0;

    function PingPongAnimation(imgs) {
      this.imgs = imgs;
      PingPongAnimation.__super__.constructor.call(this, this.imgs);
    }

    PingPongAnimation.prototype.step = function() {
      var dir;
      if (this.dir === 1) {
        if (this.currentFrame < this.length) {
          return this.currentFrame = this.currentFrame + 1;
        } else {
          return dir = -1;
        }
      } else {
        if (this.currentFrame > 0) {
          return this.currenFrame = this.currentFrame - 1;
        } else {
          return dir = 1;
        }
      }
    };

    return PingPongAnimation;

  })(Animation);

  /* class CustonAnimation extends Animation
  	
  	@order = 0
  	@currentIndex = 0;
  	
  	constructor: (@imgs, @i) ->
  		@order = @i
  		super @imgs
  		
  	step: ->
  		currentIndex
  		
  
  class Animal extends GameObject
  	@anims = []
  */


  testobj = new GameObject(5, 10, "Sprites Go Here!");

  alert(obj[0].imgs);

}).call(this);
